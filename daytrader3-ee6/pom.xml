<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ibm.websphere.samples.daytrader</groupId>
  <artifactId>daytrader3-ee6</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>ear</packaging>

  <name>daytrader3-ee6</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <!--add start-->
  <dependencies>
    <dependency>
      <groupId>com.ibm.websphere.samples.daytrader</groupId>
      <artifactId>Rest</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>war</type>
    </dependency>
    <dependency>
      <groupId>com.ibm.websphere.samples.daytrader</groupId>
      <artifactId>dt-ejb</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>ejb</type>
    </dependency>
    <dependency>
      <groupId>com.ibm.websphere.samples.daytrader</groupId>
      <artifactId>web</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>war</type>
    </dependency>
  </dependencies>
  <!--add end-->

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <version>2.6</version>
        <configuration>
            <version>6</version>
            <defaultLibBundleDir>lib</defaultLibBundleDir>
            
            <!--add start-->
            <modules>
            <ejbModule>
              <groupId>com.ibm.websphere.samples.daytrader</groupId>
              <artifactId>dt-ejb</artifactId>
              <bundleFileName>dt-ejb.jar</bundleFileName>
            </ejbModule>
            <webModule>
              <groupId>com.ibm.websphere.samples.daytrader</groupId>
              <artifactId>web</artifactId>
              <bundleFileName>web.war</bundleFileName>
            </webModule>
            <webModule>
              <groupId>com.ibm.websphere.samples.daytrader</groupId>
              <artifactId>Rest</artifactId>
              <bundleFileName>Rest.war</bundleFileName>
            </webModule>
          </modules>
          <!--add end-->
        </configuration>
      </plugin>
    </plugins>
  </build>

<!-- add part3 p.32 start -->
 <profiles>
    <profile>
      <id>ci-liberty</id>
      <!-- See Add Properties in step 3 -->
      <properties>
        <wlpServerName>Daytrader3Sample</wlpServerName>
        <daytraderAppRoute>http://localhost:9080</daytraderAppRoute>
      </properties>
      
      <dependencies>
        <!-- See Add Dependencies in step 4 -->
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.12</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-client</artifactId>
          <version>2.22.2</version>
          <scope>test</scope>
        </dependency>
        
      </dependencies>
      <build>
        <plugins>
          <!-- See Add the Maven Compiler Plugin in step 5 -->
          <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
          <executions>
            <execution>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          </plugin>
          
          <!-- See Add the Maven Resources Plugins in step 6 -->
          <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
          <executions>
            <execution>
              <id>copy-server-config</id>
              <phase>package</phase>
              <goals><goal>copy-resources</goal></goals>
              <configuration>
                <outputDirectory>${project.build.directory}/wlp/usr/servers/${wlpServerName}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src/main/liberty/config</directory>
                    <includes><include>**/*</include></includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-app</id>
              <phase>package</phase>
              <goals><goal>copy-resources</goal></goals>
              <configuration>
                <outputDirectory>${project.build.directory}/wlp/usr/servers/${wlpServerName}/dropins</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}</directory>
                    <includes><include>${project.artifactId}-${project.version}.ear</include></includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
          </plugin>
          
          <!-- See Add the Maven Failsafe Plugin in step 7 -->
          <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.18.1</version>
          <executions>
            <execution>
              <phase>integration-test</phase>
              <goals>
                <goal>integration-test</goal>
              </goals>
              <configuration>
                <systemPropertyVariables>
                  <daytrader.app.route>${daytraderAppRoute}</daytrader.app.route>
                </systemPropertyVariables>
                <testSourceDirectory>src/test/java</testSourceDirectory>
              </configuration>
            </execution>
            <execution>
              <id>verify-results</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
          
          <!-- See Add the Liberty Maven Plugin in step 8 -->
          <plugin>
          <groupId>net.wasdev.wlp.maven.plugins</groupId>
          <artifactId>liberty-maven-plugin</artifactId>
          <version>2.0</version>
          <extensions>true</extensions>
          <configuration>
            <serverName>${wlpServerName}</serverName>
            <assemblyArtifact>
              <groupId>com.ibm.websphere.appserver.runtime</groupId>
              <artifactId>wlp-kernel</artifactId>
              <version>17.0.0.4</version>
              <type>zip</type>
            </assemblyArtifact>
            <assemblyInstallDirectory>${project.build.directory}</assemblyInstallDirectory>
          </configuration>
          <executions>
            <execution>
              <id>install-liberty</id>
              <phase>prepare-package</phase>
              <goals><goal>install-server</goal></goals>
            </execution>
            <execution>
              <id>package-app</id>
              <phase>package</phase>
              <goals><goal>package-server</goal></goals>
            </execution>
            <execution>
              <id>install-feature</id>
              <phase>package</phase>
              <goals><goal>install-feature</goal></goals>
              <configuration>
                <features>
                  <acceptLicense>true</acceptLicense>
                  <feature>jsf-2.0</feature><feature>localconnector-1.0</feature>
                  <feature>wasjmsserver-1.0</feature><feature>jaxrs-1.1</feature>
                  <feature>ejblite-3.1</feature><feature>jpa-2.0</feature>
                  <feature>jmsmdb-3.1</feature><feature>wasjmsclient-1.1</feature>
                </features>
              </configuration>
            </execution>
            <execution>
              <id>start-server</id>
              <phase>pre-integration-test</phase>
              <goals><goal>start-server</goal></goals>
            </execution>
            <execution>
              <id>stop-server</id>
              <phase>post-integration-test</phase>
              <goals><goal>stop-server</goal></goals>
            </execution>
          </executions>
        </plugin>
          
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ci-docker</id>
      <!-- See Add Properties in step 3 -->
      <properties>
        <wlpServerName>Daytrader3Sample</wlpServerName>
        <daytraderAppRoute>http://localhost:9080</daytraderAppRoute>
      </properties>
      
      <dependencies>
        <!-- See Add Dependencies in step 4 -->
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.12</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-client</artifactId>
          <version>2.22.2</version>
          <scope>test</scope>
        </dependency>
        
      </dependencies>
      <build>
        <plugins>
          <!-- See Add the Maven Compiler Plugin in step 5 -->
          <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
          <executions>
            <execution>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          </plugin>
          
          <!-- See Add the Maven Resources Plugins in step 6 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
          <executions>
            <execution>
              <id>copy-server-config</id>
              <phase>package</phase>
              <goals><goal>copy-resources</goal></goals>
              <configuration>
                <outputDirectory>${project.build.directory}/wlp/usr/servers/${wlpServerName}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src/main/liberty/config</directory>
                    <includes><include>**/*</include></includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-app</id>
              <phase>package</phase>
              <goals><goal>copy-resources</goal></goals>
              <configuration>
                <outputDirectory>${project.build.directory}/wlp/usr/servers/${wlpServerName}/dropins</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.build.directory}</directory>
                    <includes><include>${project.artifactId}-${project.version}.ear</include></includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-dockerfile</id>
              <phase>package</phase>
              <goals><goal>copy-resources</goal></goals>
              <configuration>
                <outputDirectory>${project.build.directory}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src/main/resources/config</directory>
                    <includes><include>Dockerfile</include></includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
          
          <!-- See Add the Maven Failsafe Plugin in step 7 -->
          <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.18.1</version>
          <executions>
            <execution>
              <phase>integration-test</phase>
              <goals>
                <goal>integration-test</goal>
              </goals>
              <configuration>
                <systemPropertyVariables>
                  <daytrader.app.route>${daytraderAppRoute}</daytrader.app.route>
                </systemPropertyVariables>
                <testSourceDirectory>src/test/java</testSourceDirectory>
              </configuration>
            </execution>
            <execution>
              <id>verify-results</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
          
          <!-- See Add the Docker Maven Plugin (Spotify) in step 9 -->
          <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>1.0.0</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <dockerDirectory>${project.build.directory}</dockerDirectory>
            <imageName>${project.artifactId}:${project.version}</imageName>
          </configuration>
          </plugin>
          
          <!-- See Add the Docker Maven Plugin (Fabric8) in step 10 -->
          <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.20.1</version>
          <executions>
            <execution>
              <id>start</id>
              <phase>pre-integration-test</phase>
              <goals><goal>start</goal></goals>
              <configuration>
                <images>
                  <image>
                    <name>${project.artifactId}:${project.version}</name>
                    <alias>${project.artifactId}</alias>
                    <run>
                      <ports><port>9080:9080</port><port>9443:9443</port></ports>
                      <wait>
                        <log>(?s)The server defaultServer is ready to run a smarter planet.</log>
                        <time>60000</time>
                      </wait>
                    </run>
                  </image>
                </images>
              </configuration>
            </execution>
            <execution>
              <id>stop</id>
              <phase>post-integration-test</phase>
              <goals><goal>stop</goal><goal>remove</goal></goals>
            </execution>
          </executions>
          </plugin>
          
        </plugins>
      </build>
    </profile>
  </profiles>
<!-- add part3 p.32 end -->

</project>
